// Referências para elementos do DOM
const formOrcamento = document.getElementById("form-orcamento");
const clienteSelect = document.getElementById("cliente");
const produtosAdicionadosList = document.getElementById("produtos-adicionados");
const addItemButton = document.getElementById("add-item-button");
const finalizarOrcamentoButton = document.getElementById(
  "finalizar-orcamento-button"
);
const productModal = document.getElementById("product-modal");
const closeModal = document.querySelector(".close");
const searchProduct = document.getElementById("search-product");
const productList = document.getElementById("product-list");

// Dados de exemplo para produtos e clientes
const produtos = [
  { id: 1, nome: "Produto A" },
  { id: 2, nome: "Produto B" },
  { id: 3, nome: "Produto C" },
];
const clientes = [
  { id: 1, nome: "Cliente A" },
  { id: 2, nome: "Cliente B" },
  { id: 3, nome: "Cliente C" },
];

// Função para popular o select de clientes
function populateClienteSelect() {
  clienteSelect.innerHTML = "";
  clientes.forEach((cliente) => {
    const option = document.createElement("option");
    option.value = cliente.id;
    option.textContent = cliente.nome;
    clienteSelect.appendChild(option);
  });
}

// Função para abrir o modal de seleção de produtos
function openProductModal() {
  productModal.style.display = "block";
  populateProductList("");
}

// Função para fechar o modal de seleção de produtos
function closeProductModal() {
  productModal.style.display = "none";
}

// Função para popular a lista de produtos no modal
function populateProductList(query) {
  productList.innerHTML = "";
  const filteredProducts = produtos.filter((produto) =>
    produto.nome.toLowerCase().includes(query.toLowerCase())
  );
  filteredProducts.forEach((produto) => {
    const li = document.createElement("li");
    li.textContent = produto.nome;
    li.onclick = () => addProdutoToOrcamento(produto);
    productList.appendChild(li);
  });
}

// Função para adicionar um produto à lista de produtos adicionados
function addProdutoToOrcamento(produto) {
  const li = document.createElement("li");
  li.textContent = produto.nome;
  produtosAdicionadosList.appendChild(li);
  closeProductModal();
}

// Função para salvar o orçamento no localStorage
function saveOrcamento() {
  const clienteId = clienteSelect.value;
  const produtosAdicionados = Array.from(produtosAdicionadosList.children).map(
    (li) => li.textContent
  );

  if (!clienteId || produtosAdicionados.length === 0) {
    alert("Por favor, selecione um cliente e adicione produtos.");
    return;
  }

  const novoOrcamento = {
    id: Date.now(), // Use a timestamp como ID único
    cliente: clienteId,
    produtos: produtosAdicionados,
  };

  let orcamentos = JSON.parse(localStorage.getItem("orcamentos")) || [];
  orcamentos.push(novoOrcamento);
  localStorage.setItem("orcamentos", JSON.stringify(orcamentos));

  alert("Orçamento finalizado com sucesso!");
  formOrcamento.reset();
  produtosAdicionadosList.innerHTML = "";
}

// Event Listeners
addItemButton.addEventListener("click", openProductModal);
closeModal.addEventListener("click", closeProductModal);
searchProduct.addEventListener("input", (e) =>
  populateProductList(e.target.value)
);
formOrcamento.addEventListener("submit", (e) => {
  e.preventDefault();
  saveOrcamento();
});

// Popula o select de clientes quando a página carrega
populateClienteSelect();
